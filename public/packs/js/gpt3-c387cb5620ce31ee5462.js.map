{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/gpt3.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","currentDialogue","promptsCount","createChatBubble","content","sender","chatBubble","document","createElement","className","innerHTML","generateText","prompt","setLoading","bool","chekoLoadingBubble","classList","remove","add","getElementById","querySelector","setAttribute","scrollContainer","getElementsByClassName","setTimeout","scrollTop","scrollHeight","chatContainer","appendChild","fetch","method","headers","body","JSON","stringify","response","console","log","json","window","LOG_EVENTS","logSubmitPrompt","usage","prompt_tokens","completion_tokens","total_tokens","model","new_dialogue","chekoResponse","generated_text","split","map","join","removeAttribute","then","text","data","insertAdjacentHTML","promptArea","addEventListener","e","which","keyCode","shiftKey","preventDefault","logChekoAIVisit"],"mappings":"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","file":"js/gpt3-c387cb5620ce31ee5462.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n","let currentDialogue = null; // Stores the current conversation. Messages[]\nlet promptsCount = 0; // How many prompts have been sent so far?\n\n/**\n * Returns a Chat Bubble Element as a Div.\n *\n * content: string\n *\n * sender: \"user\" | \"cheko\"\n */\nfunction createChatBubble(content, sender) {\n  const chatBubble = document.createElement(\"div\");\n  chatBubble.className =\n    sender === \"user\" ? \"chat-bubble-user\" : \"chat-bubble-cheko\";\n  chatBubble.innerHTML = content;\n  return chatBubble;\n}\n\nconst generateText = async (prompt) => {\n  promptsCount++; // Increase prompt count\n\n  // Utils:\n  const chekoLoadingBubble = document.getElementById(\"cheko-loading-bubble\");\n  function setLoading(bool) {\n    if (bool) {\n      chekoLoadingBubble.classList.remove(\"d-none\"); // loading animation\n    } else {\n      chekoLoadingBubble.classList.add(\"d-none\"); // loading animation\n    }\n  }\n\n  // 1. Start requesting: Clear Chatbox, Disable Button, Play Loading Animation\n  document.querySelector(\"textarea#prompt\").value = \"\"; // clear\n  document.getElementById(\"generate-btn\").setAttribute(\"disabled\", true); // disable\n  setLoading(true); // loading animation\n\n  // Scroll into view\n  const scrollContainer = document.getElementsByClassName(\"card-body-top\")[0];\n  setTimeout(() => {\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\n  }, 50);\n\n  // 2. Add prompt as a chat bubble:\n  const chatContainer = document.getElementById(\"gpt-chat-container\");\n  chatContainer.appendChild(createChatBubble(prompt, \"user\"));\n\n  // 3. Send Prompt to Controller:\n  let response;\n\n  try {\n    response = await fetch(\"/gpt3/generate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ prompt, currentDialogue }),\n    });\n  } catch (e) {\n    console.log(e);\n\n    setLoading(false);\n    return;\n  }\n\n  const json = await response.json();\n\n  // -- Event Log --\n  window.LOG_EVENTS.logSubmitPrompt(\n    json.usage.prompt_tokens,\n    json.usage.completion_tokens,\n    json.usage.total_tokens,\n    json.usage.model\n  );\n\n  // 4. Maintain a string record of the current dialogue between the user and the chatbot.\n  currentDialogue = json.new_dialogue;\n  console.log(currentDialogue);\n\n  // 5. Get response and add as a chat bubble:\n  const chekoResponse = json.generated_text\n    .split(\"\\n\")\n    .map((t) => `<p>${t}</p>`)\n    .join(\"\");\n  chatContainer.appendChild(createChatBubble(chekoResponse, \"cheko\"));\n\n  // 6. Finished Requesting: Re-enable button, turn off loading animation\n  document.getElementById(\"generate-btn\").removeAttribute(\"disabled\");\n  setLoading(false); // loading animation\n\n  scrollContainer.scrollTop = scrollContainer.scrollHeight;\n\n  // 7. Display a prompt after the 2nd\n  if (promptsCount === 2) {\n    // Need a better answer? Work with our tutors in HW-Help or Q&A.\n    // chatContainer.append(createChatBubble(``,\"cheko\"))\n\n    setLoading(true); // loading animation\n    setTimeout(() => {\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\n    }, 50);\n    await fetch(\"/gpt3/render_better_answer_bubble\")\n      .then((response) => response.text())\n      .then((data) => {\n        setTimeout(() => {\n          chatContainer.insertAdjacentHTML(\"beforeend\", data);\n          setLoading(false); // loading animation\n          scrollContainer.scrollTop = scrollContainer.scrollHeight;\n        }, 800);\n      });\n  }\n};\n\n// -- Submit Event Listener --\nconst promptArea = document.querySelector(\"textarea#prompt\");\n\npromptArea.addEventListener(\"keydown\", function (e) {\n  // Get the code of pressed key\n  const keyCode = e.which || e.keyCode;\n\n  // 13 represents the Enter key\n  if (keyCode === 13 && !e.shiftKey) {\n    // Don't generate a new line\n    e.preventDefault();\n\n    // Do something else such as send the message to back-end\n    // ...\n    generateText(promptArea.value);\n  }\n});\n\ndocument.querySelector(\"form\").addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  generateText(document.querySelector(\"textarea#prompt\").value);\n});\n\nwindow.LOG_EVENTS.logChekoAIVisit();\n"],"sourceRoot":""}