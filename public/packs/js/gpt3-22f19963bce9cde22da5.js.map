{"version":3,"file":"js/gpt3-22f19963bce9cde22da5.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/gpt3.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/gpt3.js\");\n","let currentDialogue = null; // Stores the current conversation. Messages[]\nlet promptsCount = 0; // How many prompts have been sent so far?\n\n/**\n * Returns a Chat Bubble Element as a Div.\n *\n * content: string\n *\n * sender: \"user\" | \"cheko\"\n */\nfunction createChatBubble(content, sender) {\n  const chatBubble = document.createElement(\"div\");\n  chatBubble.className =\n    sender === \"user\" ? \"chat-bubble-user\" : \"chat-bubble-cheko\";\n  chatBubble.innerHTML = content;\n  return chatBubble;\n}\n\nconst generateText = async (prompt) => {\n  promptsCount++; // Increase prompt count\n\n  // Utils:\n  const chekoLoadingBubble = document.getElementById(\"cheko-loading-bubble\");\n  function setLoading(bool) {\n    if (bool) {\n      chekoLoadingBubble.classList.remove(\"d-none\"); // loading animation\n    } else {\n      chekoLoadingBubble.classList.add(\"d-none\"); // loading animation\n    }\n  }\n\n  // 1. Start requesting: Clear Chatbox, Disable Button, Play Loading Animation\n  document.querySelector(\"textarea#prompt\").value = \"\"; // clear\n  document.getElementById(\"generate-btn\").setAttribute(\"disabled\", true); // disable\n  setLoading(true); // loading animation\n\n  // Scroll into view\n  const scrollContainer = document.getElementsByClassName(\"card-body-top\")[0];\n  setTimeout(() => {\n    scrollContainer.scrollTop = scrollContainer.scrollHeight;\n  }, 50);\n\n  // 2. Add prompt as a chat bubble:\n  const chatContainer = document.getElementById(\"gpt-chat-container\");\n  chatContainer.appendChild(createChatBubble(prompt, \"user\"));\n\n  // 3. Send Prompt to Controller:\n  let response;\n\n  try {\n    response = await fetch(\"/gpt3/generate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ prompt, currentDialogue }),\n    });\n  } catch (e) {\n    console.log(e);\n\n    setLoading(false);\n    return;\n  }\n\n  const json = await response.json();\n\n  // -- Event Log --\n  window.LOG_EVENTS.logSubmitPrompt(\n    json.usage.prompt_tokens,\n    json.usage.completion_tokens,\n    json.usage.total_tokens,\n    json.usage.model\n  );\n\n  // 4. Maintain a string record of the current dialogue between the user and the chatbot.\n  currentDialogue = json.new_dialogue;\n  console.log(currentDialogue);\n\n  // 5. Get response and add as a chat bubble:\n  const chekoResponse = json.generated_text\n    .split(\"\\n\")\n    .map((t) => `<p>${t}</p>`)\n    .join(\"\");\n  chatContainer.appendChild(createChatBubble(chekoResponse, \"cheko\"));\n\n  // 6. Finished Requesting: Re-enable button, turn off loading animation\n  document.getElementById(\"generate-btn\").removeAttribute(\"disabled\");\n  setLoading(false); // loading animation\n\n  scrollContainer.scrollTop = scrollContainer.scrollHeight;\n\n  // 7. Display a prompt after the 2nd\n  if (promptsCount === 2) {\n    // Need a better answer? Work with our tutors in HW-Help or Q&A.\n    // chatContainer.append(createChatBubble(``,\"cheko\"))\n\n    setLoading(true); // loading animation\n    setTimeout(() => {\n      scrollContainer.scrollTop = scrollContainer.scrollHeight;\n    }, 50);\n    await fetch(\"/gpt3/render_better_answer_bubble\")\n      .then((response) => response.text())\n      .then((data) => {\n        setTimeout(() => {\n          chatContainer.insertAdjacentHTML(\"beforeend\", data);\n          setLoading(false); // loading animation\n          scrollContainer.scrollTop = scrollContainer.scrollHeight;\n        }, 800);\n      });\n  }\n};\n\n// -- Submit Event Listener --\nconst promptArea = document.querySelector(\"textarea#prompt\");\n\npromptArea.addEventListener(\"keydown\", function (e) {\n  // Get the code of pressed key\n  const keyCode = e.which || e.keyCode;\n\n  // 13 represents the Enter key\n  if (keyCode === 13 && !e.shiftKey) {\n    // Don't generate a new line\n    e.preventDefault();\n\n    // Do something else such as send the message to back-end\n    // ...\n    generateText(promptArea.value);\n  }\n});\n\ndocument.querySelector(\"form\").addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  generateText(document.querySelector(\"textarea#prompt\").value);\n});\n\nwindow.LOG_EVENTS.logChekoAIVisit();\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjFA;AAAA;AAAA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA5FA;AAAA;AAAA;AACA;AA6FA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}